/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import static forms.databaseHelper.executeQuery;
import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.TableCellRenderer;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;
import startofagreatfuture.EquipmentRepairsTable;
import startofagreatfuture.HTMLSelectedHelper;
import startofagreatfuture.JDBCUtil;
import startofagreatfuture.Job;
import startofagreatfuture.PlantEquipment;
import startofagreatfuture.UpdateHomeList;
import static startofagreatfuture.PlantEquipment.decommission;
import startofagreatfuture.Project;
import startofagreatfuture.Stats;

/**
 *
 * @author bheki
 */
public class HomeScreen extends javax.swing.JFrame {

    private int JCN;
    private DefaultListModel<String> DefaultListModelOfArtisans = new DefaultListModel();
    public static DefaultListModel<String> overdueJobListModel = new DefaultListModel();
    public static DefaultListModel<String> pendingJobListModel = new DefaultListModel();
    public static DefaultListModel<String> unassignedJobListModel = new DefaultListModel();
    public static DefaultListModel<String> WIPJobListModel = new DefaultListModel();
    private DefaultListModel<String> DefaultListModelOfProjectJobs = new DefaultListModel<>();
    ScheduledExecutorService service = null, service2 = null, service3 = null;
    private int project = 0;
    public static String htmlSelected;
    boolean booler;
    Stats stat = new Stats();
    int utilisation = stat.getLabourUtilisation();
    Vector<Vector<String>> myzuzu = new Vector<>(10);
    Vector<String> myzuzuHeadings = new Vector<>();
    List<List<Integer>> waterMeterReadings = new ArrayList<>();

    /**
     * Creates new form HomeScreen
     */
    public HomeScreen(int w) {
        super("Select Equipment");
    }

    public HomeScreen() {
        super("Maintenance");
        LocalDateTime inHomeScreen = LocalDateTime.now();
        System.out.println("Getting in HomeScreen class " + inHomeScreen);
        new AngieList();
        myzuzuHeadings.add("Property");
        myzuzuHeadings.add("Value");
        Vector<String> v = new Vector<>();
        v.add("");
        v.add("");
        for (int x = 1; x < 19; x++) {
            myzuzu.add(v);
        }
        EquipmentRepairsTable E = new EquipmentRepairsTable("m");
        try {
            service = Executors.newScheduledThreadPool(1);
            service.scheduleAtFixedRate(new startofagreatfuture.UpdateHomeList(1), 0, 5L, TimeUnit.SECONDS);
            service2 = Executors.newSingleThreadScheduledExecutor();
            service2.schedule(() -> UpdateHomeList.addToJobListModel(), 10L, TimeUnit.SECONDS);
            service3 = Executors.newScheduledThreadPool(1);
            service3.scheduleAtFixedRate(() -> {
                UpdateHomeList.checkPostponers();
            }, 0, 10, TimeUnit.SECONDS);
            service2.schedule(() -> {

                UpdateHomeList.extractDetails();
            }, 11L, TimeUnit.SECONDS);
        } catch (Exception e) {
            e.printStackTrace();
        }
        initComponents();
        Stats stats = new Stats(JDBCUtil.getConnection());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        toolsPanel = new javax.swing.JPanel();
        ribbonSettings = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        ribbonMessages = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jLabel70 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        ribbonJobs = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(5, 32767));
        jLabel24 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox<>();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(5, 32767));
        jLabel72 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox<>();
        jLabel73 = new javax.swing.JLabel();
        jComboBox9 = new javax.swing.JComboBox<>();
        ribbonStats = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox<>();
        ribbonHome = new javax.swing.JPanel();
        createJobButton = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        TabbedPane = new javax.swing.JTabbedPane();
        homePanel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOfThings = new javax.swing.JList<>();
        detailsCardsPanel = new javax.swing.JPanel();
        maintainanceManagementSelectedPanel = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jobCategories = new javax.swing.JTabbedPane();
        jScrollPane17 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        jScrollPane15 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane16 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jScrollPane18 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList<>();
        jLabel71 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        newJobPanel = new javax.swing.JPanel();
        createJobPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        workItemButton = new javax.swing.JButton("select");
        jScrollPane2 = new javax.swing.JScrollPane();
        jobDescriptionTextArea = new javax.swing.JTextArea();
        isProjectCheckBox = new javax.swing.JCheckBox();
        expectedDurationTextField = new javax.swing.JTextField();
        periodSelectorCombo = new javax.swing.JComboBox<>();
        submitJobButton = new javax.swing.JButton();
        repeatsCheckBox = new javax.swing.JCheckBox();
        frequencyComboBox = new javax.swing.JComboBox<>();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        projectPanel = new javax.swing.JPanel();
        addToProjectRBN = new javax.swing.JRadioButton();
        newProjectRBN = new javax.swing.JRadioButton();
        jobsOrProjectsCombo = new javax.swing.JComboBox<>();
        confirmProject = new javax.swing.JButton();
        jLabel5 = new javax.swing.JTextArea();
        jButton13 = new javax.swing.JButton();
        selectedProject = new javax.swing.JPanel();
        projectGantt = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listOfProjectJobs = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        addJobToProjectButton = new javax.swing.JButton();
        removeJobFromProjectButton = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        selectedJobDeatailsPanel = new javax.swing.JPanel();
        JobGantt = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListOfArtisan = new javax.swing.JList<>();
        removeArtisanButton = new javax.swing.JButton();
        finishJobButton = new javax.swing.JButton();
        makeProjectFromJobButton = new javax.swing.JButton();
        jobDescription = new javax.swing.JTextArea();
        jButton14 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jTextField2 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jobBackButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        chatsPanel = new javax.swing.JPanel();
        messagesPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jobsPanel = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList8 = new javax.swing.JList<>();
        jobDetailsPanel = new javax.swing.JPanel();
        statsPanel = new javax.swing.JPanel();
        detailedStats = new javax.swing.JPanel();
        angelicaPanel = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(forms.AngieList.workerSummaryList,forms.AngieList.headerFile);
        jLabel22 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        criticalEquipmentSelectedPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        equipmentRepairsTable = new javax.swing.JTable();
        selectedPlantRegisterPanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        PlantEquipment selection = new PlantEquipment();
        Connection conn = JDBCUtil.getConnection();
        conn = selection.getConnection();
        jTree1 = new javax.swing.JTree(selection.getEquipmentTree(9));
        jButton3 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        maintenancePanel = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        specificationsPanel = new javax.swing.JTable();
        componentsPanel = new javax.swing.JScrollPane();
        jTree2 = new javax.swing.JTree();
        generalDetailsPanel = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        utilitiesSelectedPanel = new javax.swing.JPanel();
        waterUsageSummaryPanel = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        electricityUsageSummaryPanel = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        detailedWaterUsagePanel = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        detailedElectricityUsagePanel = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        benchMarksPanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        HRPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        maintDashBoard = new javax.swing.JPanel();
        equipmentPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        plantRegisterPanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        utilitiesUsagePanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1058, 600));

        jPanel1.setBackground(java.awt.Color.gray);

        jLabel7.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jLabel7.setText("Maintenance");

        jTextField3.setToolTipText("Type here to search for anything");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        toolsPanel.setBackground(java.awt.Color.lightGray);
        toolsPanel.setLayout(new java.awt.CardLayout());

        ribbonSettings.setBackground(java.awt.Color.lightGray);
        ribbonSettings.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jButton8.setText("Create notification");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        ribbonSettings.add(jButton8);

        toolsPanel.add(ribbonSettings, "ribbonSettings");

        ribbonMessages.setBackground(java.awt.Color.lightGray);
        ribbonMessages.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jButton6.setText("Create notification");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        ribbonMessages.add(jButton6);

        jLabel70.setText("Filter by");
        ribbonMessages.add(jLabel70);

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Notification", "Messages" }));
        ribbonMessages.add(jComboBox6);

        toolsPanel.add(ribbonMessages, "ribbonMessages");

        ribbonJobs.setBackground(java.awt.Color.lightGray);
        ribbonJobs.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jButton9.setText("Create Job");
        ribbonJobs.add(jButton9);
        ribbonJobs.add(filler1);

        jLabel24.setText("Sort by");
        ribbonJobs.add(jLabel24);

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Latest", "Oldest" }));
        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });
        ribbonJobs.add(jComboBox7);
        ribbonJobs.add(filler2);

        jLabel72.setText("Filter by");
        ribbonJobs.add(jLabel72);

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Overdue", "WIP", "Unassigned", "Projects" }));
        ribbonJobs.add(jComboBox8);

        jLabel73.setText("Maintenance Type");
        ribbonJobs.add(jLabel73);

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Item 2", "Item 3", "Item 4" }));
        ribbonJobs.add(jComboBox9);

        toolsPanel.add(ribbonJobs, "ribbonJobs");

        ribbonStats.setBackground(java.awt.Color.lightGray);
        ribbonStats.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jButton4.setText("Generate Report");
        jButton4.setEnabled(false);
        ribbonStats.add(jButton4);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Weekly", "Monthly", "Quarterly", "Annually" }));
        ribbonStats.add(jComboBox4);

        toolsPanel.add(ribbonStats, "ribbonStats");

        ribbonHome.setBackground(java.awt.Color.lightGray);
        ribbonHome.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        createJobButton.setText("Create Job");
        createJobButton.setToolTipText("Create a job or project");
        createJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createJobButtonActionPerformed(evt);
            }
        });
        ribbonHome.add(createJobButton);

        jLabel26.setText("Filter By");
        ribbonHome.add(jLabel26);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Job", "Message", "Notification" }));
        ribbonHome.add(jComboBox3);

        toolsPanel.add(ribbonHome, "ribbonHome");

        TabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        TabbedPane.setName(""); // NOI18N
        TabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TabbedPaneStateChanged(evt);
            }
        });

        jPanel8.setMinimumSize(new java.awt.Dimension(200, 200));

        listOfThings.setModel(startofagreatfuture.UpdateHomeList.getJobListModel());
        listOfThings.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listOfThings.setToolTipText("<HTML>\n<title>\nList of Items\n</title>\n<body>\nRed = Overdue</br>Yellow = Unassigned</br>Green=Done</br>Blue =WIP\n</body>\n</HTML>");
        listOfThings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listOfThingsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listOfThings);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        detailsCardsPanel.setLayout(new java.awt.CardLayout());

        jPanel15.setToolTipText("More info available in Stats Panel");
        jPanel15.setAutoscrolls(true);

        jList5.setModel(unassignedJobListModel);
        jList5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList5MouseClicked(evt);
            }
        });
        jScrollPane17.setViewportView(jList5);

        jobCategories.addTab("<HTML><p style =\"border-bottom: 1px solid yellow;\">Unassigned</HTML>", jScrollPane17);

        jList1.setModel(overdueJobListModel);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane15.setViewportView(jList1);

        jobCategories.addTab("<HTML><p style =\"border-bottom: 1px solid red;\">Overdue</HTML>", jScrollPane15);

        jList4.setModel(pendingJobListModel);
        jList4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList4MouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(jList4);

        jobCategories.addTab("<HTML><p style =\"border-bottom: 1px solid black;\">Pending</HTML>", jScrollPane16);

        jList6.setModel(WIPJobListModel);
        jList6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList6MouseClicked(evt);
            }
        });
        jScrollPane18.setViewportView(jList6);

        jobCategories.addTab("<HTML><p style =\"border-bottom: 1px solid blue;\">WIP</HTML>", jScrollPane18);

        jLabel71.setFont(new java.awt.Font("Centaur", 0, 24)); // NOI18N
        jLabel71.setText("Maintenance Management Dashboard");

        javax.swing.GroupLayout maintainanceManagementSelectedPanelLayout = new javax.swing.GroupLayout(maintainanceManagementSelectedPanel);
        maintainanceManagementSelectedPanel.setLayout(maintainanceManagementSelectedPanelLayout);
        maintainanceManagementSelectedPanelLayout.setHorizontalGroup(
            maintainanceManagementSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(maintainanceManagementSelectedPanelLayout.createSequentialGroup()
                .addGroup(maintainanceManagementSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, maintainanceManagementSelectedPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2))
                    .addComponent(jLabel71)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jobCategories, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                .addContainerGap())
        );
        maintainanceManagementSelectedPanelLayout.setVerticalGroup(
            maintainanceManagementSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, maintainanceManagementSelectedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel71)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(maintainanceManagementSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobCategories, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                    .addGroup(maintainanceManagementSelectedPanelLayout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        detailsCardsPanel.add(maintainanceManagementSelectedPanel, "mmsp");

        newJobPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                newJobPanelFocusLost(evt);
            }
        });

        createJobPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Create"));

        jLabel1.setText("Work Item");

        jLabel2.setText("Expected Duration");

        jLabel3.setText("Description");

        workItemButton.setText("Select");
        workItemButton.setToolTipText("Click to select machine for repair");
        workItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workItemButtonActionPerformed(evt);
            }
        });

        jobDescriptionTextArea.setColumns(20);
        jobDescriptionTextArea.setLineWrap(true);
        jobDescriptionTextArea.setRows(5);
        jobDescriptionTextArea.setToolTipText("What's the problem with this machine or component");
        jobDescriptionTextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jobDescriptionTextArea);

        isProjectCheckBox.setText("Project?");
        isProjectCheckBox.setToolTipText("Is this a project/Part of a project");
        isProjectCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isProjectCheckBoxActionPerformed(evt);
            }
        });

        expectedDurationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expectedDurationTextFieldActionPerformed(evt);
            }
        });

        periodSelectorCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hours", "Days", "Weeks", "Months" }));
        periodSelectorCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                periodSelectorComboActionPerformed(evt);
            }
        });

        submitJobButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        submitJobButton.setText("Submit Job");
        submitJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJobButtonActionPerformed(evt);
            }
        });

        repeatsCheckBox.setText("Repeats?");
        repeatsCheckBox.setToolTipText("Should this job be done repeatedly");
        repeatsCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                repeatsCheckBoxStateChanged(evt);
            }
        });

        frequencyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Monthly" }));
        frequencyComboBox.setVisible(false);

        jButton11.setText("Type");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton12.setText("Cancel");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createJobPanelLayout = new javax.swing.GroupLayout(createJobPanel);
        createJobPanel.setLayout(createJobPanelLayout);
        createJobPanelLayout.setHorizontalGroup(
            createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createJobPanelLayout.createSequentialGroup()
                .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, createJobPanelLayout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(workItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(createJobPanelLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(createJobPanelLayout.createSequentialGroup()
                                .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2)
                                    .addComponent(expectedDurationTextField))
                                .addGap(18, 18, 18)
                                .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(periodSelectorCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(repeatsCheckBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(isProjectCheckBox, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(frequencyComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(createJobPanelLayout.createSequentialGroup()
                                .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(submitJobButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(98, 98, 98))
        );
        createJobPanelLayout.setVerticalGroup(
            createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createJobPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(workItemButton))
                .addGap(18, 18, 18)
                .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(expectedDurationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodSelectorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createJobPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3))
                    .addGroup(createJobPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(createJobPanelLayout.createSequentialGroup()
                                .addComponent(isProjectCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(repeatsCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(frequencyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton11)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addGroup(createJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitJobButton)
                    .addComponent(jButton12))
                .addContainerGap())
        );

        createJobPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton12, submitJobButton});

        projectPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Project"));
        projectPanel.setVisible(false);

        buttonGroup1.add(addToProjectRBN);
        addToProjectRBN.setText("Add to Project");
        addToProjectRBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToProjectRBNActionPerformed(evt);
            }
        });

        buttonGroup1.add(newProjectRBN);
        newProjectRBN.setText("New project");
        newProjectRBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProjectRBNActionPerformed(evt);
            }
        });

        jobsOrProjectsCombo.setAutoscrolls(true);
        jobsOrProjectsCombo.setMaximumSize(new java.awt.Dimension(60, 20));
        jobsOrProjectsCombo.setMinimumSize(new java.awt.Dimension(40, 20));
        jobsOrProjectsCombo.setPreferredSize(new java.awt.Dimension(190, 50));

        confirmProject.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        confirmProject.setText("Confirm");
        confirmProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmProjectActionPerformed(evt);
            }
        });

        jLabel5.setEditable(false);
        jLabel5.setBackground(new java.awt.Color(240, 240, 240));
        jLabel5.setColumns(20);
        jLabel5.setRows(5);
        jLabel5.setWrapStyleWord(true);
        jLabel5.setAutoscrolls(false);
        jLabel5.setWrapStyleWord(true);
        jLabel5.setLineWrap(true);

        jButton13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton13.setText("Cancel");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout projectPanelLayout = new javax.swing.GroupLayout(projectPanel);
        projectPanel.setLayout(projectPanelLayout);
        projectPanelLayout.setHorizontalGroup(
            projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projectPanelLayout.createSequentialGroup()
                .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(projectPanelLayout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(addToProjectRBN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newProjectRBN))
                    .addGroup(projectPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(projectPanelLayout.createSequentialGroup()
                                .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                                .addGap(12, 12, 12)
                                .addComponent(confirmProject, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE))
                            .addComponent(jobsOrProjectsCombo, 0, 849, Short.MAX_VALUE))
                        .addGap(2, 2, 2)))
                .addGap(98, 98, 98))
        );
        projectPanelLayout.setVerticalGroup(
            projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addToProjectRBN)
                    .addComponent(newProjectRBN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jobsOrProjectsCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmProject)
                    .addComponent(jButton13))
                .addContainerGap())
        );

        javax.swing.GroupLayout newJobPanelLayout = new javax.swing.GroupLayout(newJobPanel);
        newJobPanel.setLayout(newJobPanelLayout);
        newJobPanelLayout.setHorizontalGroup(
            newJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(newJobPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(newJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createJobPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(projectPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        newJobPanelLayout.setVerticalGroup(
            newJobPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newJobPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createJobPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        detailsCardsPanel.add(newJobPanel, "newJobPanel");

        projectGantt.setToolTipText("project timeline");
        projectGantt.setEnabled(false);
        projectGantt.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 5));

        listOfProjectJobs.setModel(DefaultListModelOfProjectJobs);
        listOfProjectJobs.setToolTipText("List of this project's jobs");
        listOfProjectJobs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listOfProjectJobsMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(listOfProjectJobs);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "gi", "jk", "jjh", "nmnmnm", "nbbn", "nbnnbbn", "nnnmnm", "nnmnmmn", "mnnmnmnm", "nmnnmnm", "mnnmnmnm" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(jList2);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane7.setViewportView(jTextArea1);

        jButton2.setText("Sen");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        addJobToProjectButton.setText("Add job");
        addJobToProjectButton.setToolTipText("Add jobs to this project");
        addJobToProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJobToProjectButtonActionPerformed(evt);
            }
        });

        removeJobFromProjectButton.setText("Remove Job");

        jLabel69.setText("Initiate Project In");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "?", "Now", "Days", "Months" }));
        jComboBox5.setToolTipText("Select when to initiate this project");
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jComboBox5.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox5PropertyChange(evt);
            }
        });

        jButton5.setText("<-Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectedProjectLayout = new javax.swing.GroupLayout(selectedProject);
        selectedProject.setLayout(selectedProjectLayout);
        selectedProjectLayout.setHorizontalGroup(
            selectedProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedProjectLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(selectedProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(selectedProjectLayout.createSequentialGroup()
                        .addComponent(jScrollPane7)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectedProjectLayout.createSequentialGroup()
                        .addComponent(projectGantt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(selectedProjectLayout.createSequentialGroup()
                        .addComponent(jScrollPane6)
                        .addContainerGap())))
            .addGroup(selectedProjectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectedProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(selectedProjectLayout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addJobToProjectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeJobFromProjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel69)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1137, Short.MAX_VALUE))
                .addContainerGap())
        );

        selectedProjectLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addJobToProjectButton, removeJobFromProjectButton});

        selectedProjectLayout.setVerticalGroup(
            selectedProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedProjectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectedProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(addJobToProjectButton)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel69)
                    .addComponent(removeJobFromProjectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projectGantt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(selectedProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(10, 10, 10))
        );

        detailsCardsPanel.add(selectedProject, "selectedProject");

        JobGantt.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 10));

        jListOfArtisan.setModel(DefaultListModelOfArtisans/*new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        }*/);
        jListOfArtisan.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jListOfArtisan.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        jListOfArtisan.setMinimumSize(new java.awt.Dimension(5, 0));
        jListOfArtisan.setVisibleRowCount(1);
        jListOfArtisan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListOfArtisanMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jListOfArtisan);

        removeArtisanButton.setText("Remove Artisan");
        removeArtisanButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeArtisanButtonMouseClicked(evt);
            }
        });
        removeArtisanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeArtisanButtonActionPerformed(evt);
            }
        });

        finishJobButton.setText("Finish Job");
        finishJobButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finishJobButtonMouseClicked(evt);
            }
        });
        finishJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishJobButtonActionPerformed(evt);
            }
        });

        makeProjectFromJobButton.setText("Make Project");
        makeProjectFromJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeProjectFromJobButtonActionPerformed(evt);
            }
        });

        jobDescription.setBackground(new java.awt.Color(240, 240, 240));
        jobDescription.setColumns(20);
        jobDescription.setLineWrap(true);
        jobDescription.setRows(5);
        jobDescription.setWrapStyleWord(true);

        jButton14.setText("Delete Job");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane3)
                    .addComponent(jobDescription)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(finishJobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeArtisanButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(makeProjectFromJobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jobDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeArtisanButton)
                    .addComponent(finishJobButton)
                    .addComponent(makeProjectFromJobButton)
                    .addComponent(jButton14))
                .addGap(10, 10, 10))
        );

        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jList3);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton7.setText("Sen");

        jobBackButton.setText("<- Back");
        jobBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectedJobDeatailsPanelLayout = new javax.swing.GroupLayout(selectedJobDeatailsPanel);
        selectedJobDeatailsPanel.setLayout(selectedJobDeatailsPanelLayout);
        selectedJobDeatailsPanelLayout.setHorizontalGroup(
            selectedJobDeatailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedJobDeatailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectedJobDeatailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(selectedJobDeatailsPanelLayout.createSequentialGroup()
                        .addComponent(jTextField2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectedJobDeatailsPanelLayout.createSequentialGroup()
                        .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(8, 8, 8))
                    .addComponent(JobGantt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(selectedJobDeatailsPanelLayout.createSequentialGroup()
                        .addComponent(jobBackButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        selectedJobDeatailsPanelLayout.setVerticalGroup(
            selectedJobDeatailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedJobDeatailsPanelLayout.createSequentialGroup()
                .addComponent(jobBackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JobGantt, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(selectedJobDeatailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addContainerGap())
        );

        detailsCardsPanel.add(selectedJobDeatailsPanel, "selectedJobDetailsPanel");

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailsCardsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(detailsCardsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        TabbedPane.addTab("Home", homePanel);

        javax.swing.GroupLayout chatsPanelLayout = new javax.swing.GroupLayout(chatsPanel);
        chatsPanel.setLayout(chatsPanelLayout);
        chatsPanelLayout.setHorizontalGroup(
            chatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );
        chatsPanelLayout.setVerticalGroup(
            chatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 631, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout messagesPanelLayout = new javax.swing.GroupLayout(messagesPanel);
        messagesPanel.setLayout(messagesPanelLayout);
        messagesPanelLayout.setHorizontalGroup(
            messagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        messagesPanelLayout.setVerticalGroup(
            messagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(chatsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messagesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(chatsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(messagesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        TabbedPane.addTab("Notifications", jPanel4);

        jList8.setModel(startofagreatfuture.UpdateHomeList.getJobListModel());
        jScrollPane12.setViewportView(jList8);

        javax.swing.GroupLayout jobsPanelLayout = new javax.swing.GroupLayout(jobsPanel);
        jobsPanel.setLayout(jobsPanelLayout);
        jobsPanelLayout.setHorizontalGroup(
            jobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
        );
        jobsPanelLayout.setVerticalGroup(
            jobsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jobDetailsPanelLayout = new javax.swing.GroupLayout(jobDetailsPanel);
        jobDetailsPanel.setLayout(jobDetailsPanelLayout);
        jobDetailsPanelLayout.setHorizontalGroup(
            jobDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jobDetailsPanelLayout.setVerticalGroup(
            jobDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jobsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jobDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jobsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jobDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        TabbedPane.addTab("Work Orders", jPanel5);

        detailedStats.setLayout(new java.awt.CardLayout());

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            forms.AngieList.workerSummaryList,
            forms.AngieList.headerFile) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class,
                java.lang.String.class, java.lang.String.class,
                java.lang.Double.class, java.lang.Double.class
            };
            @Override
            public int getRowCount() {
                return forms.AngieList.workerSummaryList.size();
            }
            @Override
            public int getColumnCount() {
                return forms.AngieList.headerFile.size();
            }
            @Override
            public String getColumnName(int columnIndex) {
                return forms.AngieList.headerFile.get(columnIndex);
            }
            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

        });
        jTable1.setIntercellSpacing(new java.awt.Dimension(0, 3));
        jTable1.setRowHeight(19);
        jScrollPane9.setViewportView(jTable1);

        jLabel22.setFont(new java.awt.Font("Centaur", 0, 24)); // NOI18N
        jLabel22.setText("Artisan Work Record");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel33.setText("Total Number of Artisans");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel34.setText("32");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setText("Total Number of jobs");

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setText("26");

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setText("HR Utilisation");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel38.setText("55%");

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel39.setText("Total Departmental workers");

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel40.setText("50");

        javax.swing.GroupLayout angelicaPanelLayout = new javax.swing.GroupLayout(angelicaPanel);
        angelicaPanel.setLayout(angelicaPanelLayout);
        angelicaPanelLayout.setHorizontalGroup(
            angelicaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1112, Short.MAX_VALUE)
            .addGroup(angelicaPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(angelicaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addGroup(angelicaPanelLayout.createSequentialGroup()
                        .addGroup(angelicaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(angelicaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel36)
                            .addComponent(jLabel38)
                            .addComponent(jLabel40))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        angelicaPanelLayout.setVerticalGroup(
            angelicaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, angelicaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addGroup(angelicaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(angelicaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(angelicaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(angelicaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
        );

        detailedStats.add(angelicaPanel, "angelicaPanel");

        jLabel4.setFont(new java.awt.Font("Centaur", 0, 18)); // NOI18N
        jLabel4.setText("Critical Equipment Jobs for ");

        jComboBox1.setFont(new java.awt.Font("Centaur", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Week", "Month", "Quarter", "Year" }));

        jLabel13.setText("Current Week's availability");

        jLabel14.setText("44%");

        jLabel15.setText("Last week's availability");

        jLabel16.setText("555%");

        jLabel18.setText("Percentage difference");

        jLabel19.setText("44%");

        TableCellRenderer renderer = new EquipmentRepairsTable("m");
        equipmentRepairsTable.setDefaultRenderer(Object.class, renderer);
        equipmentRepairsTable.setModel(new javax.swing.table.DefaultTableModel(
            EquipmentRepairsTable.getForTheTable(),
            EquipmentRepairsTable.headerFile) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class,
                java.lang.String.class, java.lang.String.class,
                java.lang.String.class
            };
            @Override
            public int getRowCount() {
                return EquipmentRepairsTable.getForTheTable().size();
            }
            @Override
            public int getColumnCount() {
                return 5;
            }
            @Override
            public String getColumnName(int columnIndex) {
                return EquipmentRepairsTable.headerFile.get(columnIndex);
            }
            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

        });
        equipmentRepairsTable.setEnabled(false);
        equipmentRepairsTable.setFocusable(false);
        equipmentRepairsTable.setIntercellSpacing(new java.awt.Dimension(1, 0));
        equipmentRepairsTable.setRowHeight(48);
        equipmentRepairsTable.setRowSelectionAllowed(false);
        equipmentRepairsTable.setShowHorizontalLines(false);
        jScrollPane10.setViewportView(equipmentRepairsTable);

        javax.swing.GroupLayout criticalEquipmentSelectedPanelLayout = new javax.swing.GroupLayout(criticalEquipmentSelectedPanel);
        criticalEquipmentSelectedPanel.setLayout(criticalEquipmentSelectedPanelLayout);
        criticalEquipmentSelectedPanelLayout.setHorizontalGroup(
            criticalEquipmentSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(criticalEquipmentSelectedPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(criticalEquipmentSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(criticalEquipmentSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16)
                    .addComponent(jLabel19))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, criticalEquipmentSelectedPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 1092, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        criticalEquipmentSelectedPanelLayout.setVerticalGroup(
            criticalEquipmentSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(criticalEquipmentSelectedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(criticalEquipmentSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(criticalEquipmentSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(criticalEquipmentSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(criticalEquipmentSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                .addContainerGap())
        );

        detailedStats.add(criticalEquipmentSelectedPanel, "equipmentSelectedPanel");

        jLabel17.setFont(new java.awt.Font("Centaur", 0, 24)); // NOI18N
        jLabel17.setText("Plant Register");

        jButton1.setText("Add Sub Element");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TreeSelectionModel tsm = jTree1.getSelectionModel();
        tsm.setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane11.setViewportView(jTree1);

        jButton3.setText("Edit Properties");

        jComboBox2.setFont(new java.awt.Font("Centaur", 0, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tree View", "Grid View" }));

        java.util.Vector vec = new java.util.Vector<>();
        vec.add("Property");
        vec.add("Value");

        javax.swing.table.TableModel myTable =
        new javax.swing.table.DefaultTableModel(maint,vec) {
            @Override
            public int getRowCount() {
                return maint.size();
            }
            @Override
            public int getColumnCount() {
                return 2;
            }
            @Override
            public String getColumnName(int columnIndex) {
                return vec.get(columnIndex).toString();
            }
            @Override
            public Class getColumnClass(int columnIndex) {
                return String.class;
            }

        };
        jTable3.setModel(myTable);
        maintenancePanel.setViewportView(jTable3);

        jTabbedPane1.addTab("Maintenance", maintenancePanel);

        specificationsPanel.setModel(new javax.swing.table.DefaultTableModel((Vector<Vector<String>>)myzuzu,(Vector<String>) myzuzuHeadings) {
            Class[] types = new Class [] {
                java.lang.String.class,java.lang.String.class};
            @Override
            public int getRowCount() {
                return allElse.size();
            }
            @Override
            public int getColumnCount() {
                return 2;
            }
            @Override
            public String getColumnName(int columnIndex) {
                if(columnIndex==0)
                return "Property";
                else return "value";
            }
            @Override
            public Class getColumnClass(int columnIndex) {
                return String.class;
            }
            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                return allElse.get(rowIndex).get(columnIndex);
            }

        }
    );
    jTabbedPane1.addTab("Specifications", specificationsPanel);

    componentsPanel.setViewportView(jTree2);

    jTabbedPane1.addTab("Components", componentsPanel);

    jTable2.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {"Manufacturer", "Bosch"},
            {"Model number", "0001"},
            {"Serial Number", "211243"},
            {"Purchase Year", "2019"}
        },
        new String [] {
            "Item", "Value"
        }
    ));
    generalDetailsPanel.setViewportView(jTable2);

    jTabbedPane1.addTab("General Details", generalDetailsPanel);

    jButton10.setText("Search");

    javax.swing.GroupLayout selectedPlantRegisterPanelLayout = new javax.swing.GroupLayout(selectedPlantRegisterPanel);
    selectedPlantRegisterPanel.setLayout(selectedPlantRegisterPanelLayout);
    selectedPlantRegisterPanelLayout.setHorizontalGroup(
        selectedPlantRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(selectedPlantRegisterPanelLayout.createSequentialGroup()
            .addGap(204, 204, 204)
            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(selectedPlantRegisterPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(selectedPlantRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(selectedPlantRegisterPanelLayout.createSequentialGroup()
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(selectedPlantRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectedPlantRegisterPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(34, 34, 34))))
    );
    selectedPlantRegisterPanelLayout.setVerticalGroup(
        selectedPlantRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(selectedPlantRegisterPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel17)
            .addGap(18, 18, 18)
            .addGroup(selectedPlantRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(selectedPlantRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10)
                    .addComponent(jButton3)
                    .addComponent(jButton1)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(selectedPlantRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane11)
                .addComponent(jTabbedPane1))
            .addContainerGap())
    );

    detailedStats.add(selectedPlantRegisterPanel, "selectedPlantRegisterPanel");

    utilitiesSelectedPanel.setMinimumSize(new java.awt.Dimension(400, 400));
    utilitiesSelectedPanel.setName("usp"); // NOI18N

    waterUsageSummaryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Water Usage Summary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Centaur", 0, 24))); // NOI18N

    jLabel43.setText("5000");

    jLabel42.setText("Total water used this week");

    jLabel45.setText("Total Water used last week");

    jLabel44.setText("4000");

    jLabel46.setText("20%");

    jLabel47.setText("Difference");

    jLabel48.setText("2.4");

    jLabel49.setText("Brewing Efficiency");

    javax.swing.GroupLayout waterUsageSummaryPanelLayout = new javax.swing.GroupLayout(waterUsageSummaryPanel);
    waterUsageSummaryPanel.setLayout(waterUsageSummaryPanelLayout);
    waterUsageSummaryPanelLayout.setHorizontalGroup(
        waterUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(waterUsageSummaryPanelLayout.createSequentialGroup()
            .addGap(39, 39, 39)
            .addGroup(waterUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel47, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel49, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGap(18, 18, 18)
            .addGroup(waterUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel43)
                .addComponent(jLabel44)
                .addComponent(jLabel46)
                .addComponent(jLabel48))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    waterUsageSummaryPanelLayout.setVerticalGroup(
        waterUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(waterUsageSummaryPanelLayout.createSequentialGroup()
            .addGroup(waterUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel42)
                .addComponent(jLabel43))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(waterUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel45)
                .addComponent(jLabel44))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(waterUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel47)
                .addComponent(jLabel46))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(waterUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel49)
                .addComponent(jLabel48))
            .addGap(0, 13, Short.MAX_VALUE))
    );

    electricityUsageSummaryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Electricity Usage Summary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Centaur", 0, 24))); // NOI18N

    jLabel62.setText("5000");

    jLabel63.setText("Total Electricity used last week");

    jLabel67.setText("Brewing Efficiency");

    jLabel68.setText("2.4");

    jLabel65.setText("20%");

    jLabel61.setText("Total Electricity used this week");

    jLabel66.setText("Difference");

    jLabel64.setText("4000");

    javax.swing.GroupLayout electricityUsageSummaryPanelLayout = new javax.swing.GroupLayout(electricityUsageSummaryPanel);
    electricityUsageSummaryPanel.setLayout(electricityUsageSummaryPanelLayout);
    electricityUsageSummaryPanelLayout.setHorizontalGroup(
        electricityUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(electricityUsageSummaryPanelLayout.createSequentialGroup()
            .addGap(45, 45, 45)
            .addGroup(electricityUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel61, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel63, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel66, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel67, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGap(18, 18, 18)
            .addGroup(electricityUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel62)
                .addComponent(jLabel64)
                .addComponent(jLabel65)
                .addComponent(jLabel68))
            .addContainerGap(339, Short.MAX_VALUE))
    );
    electricityUsageSummaryPanelLayout.setVerticalGroup(
        electricityUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(electricityUsageSummaryPanelLayout.createSequentialGroup()
            .addGroup(electricityUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel61)
                .addComponent(jLabel62))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(electricityUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel63)
                .addComponent(jLabel64))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(electricityUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel66)
                .addComponent(jLabel65))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(electricityUsageSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel67)
                .addComponent(jLabel68))
            .addGap(0, 13, Short.MAX_VALUE))
    );

    jScrollPane14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detailed Water Use", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Centaur", 0, 24))); // NOI18N

    jLabel51.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel51.setText("Council Meters");

    jLabel52.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel52.setText("Internal Meters");

    jLabel53.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel53.setText("Efficiency");

    jLabel54.setText("<html>\n" +
        "<table class=MsoTableGrid border=1>\n" +
        "<tr >\n" +
        "<td rowspan = \"2\">Week</td>\n" +
        "<td colspan =\"2\" align=center valign=top text-align:center>KiloWatt per Hectolitre</ts>\n" +
        "<td rowspan=\"2\">Beer Produced</td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>whole brewery\n" +
        "</td>\n" +
        "<td>without malts\n" +
        "</td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td >23 jun</td>\n" +
        "<td>fddf</td>\n" +
        "<td>dffd</td>\n" +
        "<td>dffd</td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>30 jun</td>\n" +
        "<td>er</td>\n" +
        "<td>gf</td>\n" +
        "<td>io</td>\n" +
        "</tr>\n" +
        "</table>\n" +
        "</html>");

    javax.swing.GroupLayout detailedWaterUsagePanelLayout = new javax.swing.GroupLayout(detailedWaterUsagePanel);
    detailedWaterUsagePanel.setLayout(detailedWaterUsagePanelLayout);
    detailedWaterUsagePanelLayout.setHorizontalGroup(
        detailedWaterUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(detailedWaterUsagePanelLayout.createSequentialGroup()
            .addGroup(detailedWaterUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailedWaterUsagePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(detailedWaterUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel51)
                        .addComponent(jLabel53)
                        .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(detailedWaterUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel54, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGap(18, 18, 18))
    );
    detailedWaterUsagePanelLayout.setVerticalGroup(
        detailedWaterUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(detailedWaterUsagePanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel51)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel52)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel53)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
    );

    jScrollPane14.setViewportView(detailedWaterUsagePanel);

    detailedElectricityUsagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detailed Electricity Use", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Centaur", 0, 24))); // NOI18N

    jLabel55.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel55.setText("ZESA Meters");

    jLabel56.setText("<html>\n" +
        "<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=3\n" +
        " style='border-collapse:collapse;border:none'>\n" +
        "<tr>\n" +
        "<td></td>\n" +
        "<td>this week</td>\n" +
        "<td>Last Week</td>\n" +
        "<td>% Variance</td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>Reception</td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>Effluent</td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>Malting</td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>PumpHouse</td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>Far Corner</td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>Total</td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "<td></td>\n" +
        "</tr>\n" +
        "</table>\n" +
        "</html>");

    jLabel57.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel57.setText("Efficiency");

    jLabel58.setText("<html>\n" +
        "<table class=MsoTableGrid border=1>\n" +
        "<tr >\n" +
        "<td rowspan = \"2\">Week</td>\n" +
        "<td colspan =\"2\" align=center valign=top text-align:center>KiloWatt per Hectolitre</ts>\n" +
        "<td rowspan=\"2\">Beer Produced</td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>whole brewery\n" +
        "</td>\n" +
        "<td>without malts\n" +
        "</td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td >23 jun</td>\n" +
        "<td>fddf</td>\n" +
        "<td>dffd</td>\n" +
        "<td>dffd</td>\n" +
        "</tr>\n" +
        "<tr>\n" +
        "<td>30 jun</td>\n" +
        "<td>er</td>\n" +
        "<td>gf</td>\n" +
        "<td>io</td>\n" +
        "</tr>\n" +
        "</table>\n" +
        "</html>");

    javax.swing.GroupLayout detailedElectricityUsagePanelLayout = new javax.swing.GroupLayout(detailedElectricityUsagePanel);
    detailedElectricityUsagePanel.setLayout(detailedElectricityUsagePanelLayout);
    detailedElectricityUsagePanelLayout.setHorizontalGroup(
        detailedElectricityUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jLabel56, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(detailedElectricityUsagePanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(detailedElectricityUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    detailedElectricityUsagePanelLayout.setVerticalGroup(
        detailedElectricityUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(detailedElectricityUsagePanelLayout.createSequentialGroup()
            .addComponent(jLabel55)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel57)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout utilitiesSelectedPanelLayout = new javax.swing.GroupLayout(utilitiesSelectedPanel);
    utilitiesSelectedPanel.setLayout(utilitiesSelectedPanelLayout);
    utilitiesSelectedPanelLayout.setHorizontalGroup(
        utilitiesSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(utilitiesSelectedPanelLayout.createSequentialGroup()
            .addGroup(utilitiesSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(waterUsageSummaryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(utilitiesSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(detailedElectricityUsagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(electricityUsageSummaryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );
    utilitiesSelectedPanelLayout.setVerticalGroup(
        utilitiesSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(utilitiesSelectedPanelLayout.createSequentialGroup()
            .addGroup(utilitiesSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(waterUsageSummaryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(electricityUsageSummaryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(utilitiesSelectedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(detailedElectricityUsagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
    );

    detailedStats.add(utilitiesSelectedPanel, "usp");

    javax.swing.GroupLayout benchMarksPanelLayout = new javax.swing.GroupLayout(benchMarksPanel);
    benchMarksPanel.setLayout(benchMarksPanelLayout);
    benchMarksPanelLayout.setHorizontalGroup(
        benchMarksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 1112, Short.MAX_VALUE)
    );
    benchMarksPanelLayout.setVerticalGroup(
        benchMarksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 642, Short.MAX_VALUE)
    );

    detailedStats.add(benchMarksPanel, "benchMarksPanel");

    HRPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    HRPanel.setMinimumSize(new java.awt.Dimension(130, 72));
    HRPanel.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            HRPanelMouseClicked(evt);
        }
    });

    jLabel6.setFont(new java.awt.Font("Centaur", 1, 24)); // NOI18N
    jLabel6.setText(stat.getLabourUtilisation()+"%");

    jLabel8.setFont(new java.awt.Font("Centaur", 0, 12)); // NOI18N
    jLabel8.setText("Labour Utilisation");

    jLabel9.setText("Total available man hours");

    jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jLabel10.setText("Man hours worked");

    jLabel11.setText(stat.getNumberOfHours()+"hours");

    jLabel12.setText(stat.getTotalWorkHours()+"h");

    jProgressBar1.setForeground(new java.awt.Color(51, 204, 0));
    jProgressBar1.setValue(utilisation);
    jProgressBar1.setPreferredSize(null);

    javax.swing.GroupLayout HRPanelLayout = new javax.swing.GroupLayout(HRPanel);
    HRPanel.setLayout(HRPanelLayout);
    HRPanelLayout.setHorizontalGroup(
        HRPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(HRPanelLayout.createSequentialGroup()
            .addGroup(HRPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(HRPanelLayout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addGroup(HRPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(HRPanelLayout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(HRPanelLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(149, 149, 149)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(HRPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HRPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HRPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(maintDashBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    HRPanelLayout.setVerticalGroup(
        HRPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(HRPanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(HRPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel6))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(HRPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel9)
                .addComponent(jLabel11))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(HRPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel10)
                .addComponent(jLabel12))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(maintDashBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    equipmentPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    equipmentPanel.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            equipmentPanelMouseClicked(evt);
        }
    });

    jLabel20.setFont(new java.awt.Font("Centaur", 0, 18)); // NOI18N
    jLabel20.setText("Critical Equipment Repairs");

    jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/criticalEquipmentRepairs.png"))); // NOI18N

    jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jLabel27.setText("Total Jobs");

    jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jLabel28.setText("Plant availability");

    jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jLabel29.setText("# Critical Equipment Down");

    jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jLabel30.setText("3");

    jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jLabel31.setText("43%");

    jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jLabel32.setText("6");

    javax.swing.GroupLayout equipmentPanelLayout = new javax.swing.GroupLayout(equipmentPanel);
    equipmentPanel.setLayout(equipmentPanelLayout);
    equipmentPanelLayout.setHorizontalGroup(
        equipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(equipmentPanelLayout.createSequentialGroup()
            .addContainerGap(101, Short.MAX_VALUE)
            .addComponent(jLabel20)
            .addContainerGap(101, Short.MAX_VALUE))
        .addGroup(equipmentPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel25)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(equipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel30)
                .addComponent(jLabel31)
                .addComponent(jLabel32))
            .addGap(18, 18, 18)
            .addGroup(equipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel28)
                .addComponent(jLabel29)
                .addComponent(jLabel27)))
    );
    equipmentPanelLayout.setVerticalGroup(
        equipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(equipmentPanelLayout.createSequentialGroup()
            .addGap(0, 0, 0)
            .addComponent(jLabel20)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(equipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel25)
                .addGroup(equipmentPanelLayout.createSequentialGroup()
                    .addGroup(equipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27)
                        .addComponent(jLabel30))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(equipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel28)
                        .addComponent(jLabel31))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(equipmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29)
                        .addComponent(jLabel32)))))
    );

    plantRegisterPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    plantRegisterPanel.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            plantRegisterPanelMouseClicked(evt);
        }
    });

    jLabel21.setFont(new java.awt.Font("Centaur", 0, 36)); // NOI18N
    jLabel21.setText("Plant Register");

    javax.swing.GroupLayout plantRegisterPanelLayout = new javax.swing.GroupLayout(plantRegisterPanel);
    plantRegisterPanel.setLayout(plantRegisterPanelLayout);
    plantRegisterPanelLayout.setHorizontalGroup(
        plantRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(plantRegisterPanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel21)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    plantRegisterPanelLayout.setVerticalGroup(
        plantRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(plantRegisterPanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel21)
            .addContainerGap(59, Short.MAX_VALUE))
    );

    jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jPanel9MouseClicked(evt);
        }
    });

    jLabel60.setFont(new java.awt.Font("Centaur", 0, 24)); // NOI18N
    jLabel60.setText("BenchMarking");

    javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
    jPanel9.setLayout(jPanel9Layout);
    jPanel9Layout.setHorizontalGroup(
        jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel9Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel60)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel9Layout.setVerticalGroup(
        jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel9Layout.createSequentialGroup()
            .addContainerGap(29, Short.MAX_VALUE)
            .addComponent(jLabel60)
            .addContainerGap(68, Short.MAX_VALUE))
    );

    utilitiesUsagePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    utilitiesUsagePanel.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            utilitiesUsagePanelMouseClicked(evt);
        }
    });

    jLabel23.setFont(new java.awt.Font("Centaur", 0, 36)); // NOI18N
    jLabel23.setText("Utilities");

    jLabel59.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/utilityUse.png"))); // NOI18N

    javax.swing.GroupLayout utilitiesUsagePanelLayout = new javax.swing.GroupLayout(utilitiesUsagePanel);
    utilitiesUsagePanel.setLayout(utilitiesUsagePanelLayout);
    utilitiesUsagePanelLayout.setHorizontalGroup(
        utilitiesUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(utilitiesUsagePanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel59)
            .addGap(18, 18, 18)
            .addComponent(jLabel23)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    utilitiesUsagePanelLayout.setVerticalGroup(
        utilitiesUsagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(utilitiesUsagePanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel59)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, utilitiesUsagePanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel23)
            .addGap(38, 38, 38))
    );

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(utilitiesUsagePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(plantRegisterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(equipmentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(HRPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(HRPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(equipmentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(plantRegisterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(utilitiesUsagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    jScrollPane8.setViewportView(jPanel3);

    javax.swing.GroupLayout statsPanelLayout = new javax.swing.GroupLayout(statsPanel);
    statsPanel.setLayout(statsPanelLayout);
    statsPanelLayout.setHorizontalGroup(
        statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(statsPanelLayout.createSequentialGroup()
            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(detailedStats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    statsPanelLayout.setVerticalGroup(
        statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(detailedStats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
    );

    TabbedPane.addTab("Stats", statsPanel);

    javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
    jPanel13.setLayout(jPanel13Layout);
    jPanel13Layout.setHorizontalGroup(
        jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 201, Short.MAX_VALUE)
    );
    jPanel13Layout.setVerticalGroup(
        jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 100, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 100, Short.MAX_VALUE)
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 100, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addGap(174, 174, 174)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(142, 142, 142)
            .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel7Layout.setVerticalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(85, 85, 85)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(103, 103, 103)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(439, Short.MAX_VALUE))
    );

    TabbedPane.addTab("Settings", jPanel7);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(toolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        .addComponent(TabbedPane)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(toolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(TabbedPane))
    );

    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel1, toolsPanel});

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void workItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workItemButtonActionPerformed
        // TODO add your handling code here:
        JFrame dsd = new SelectEquipment();
        dsd.setVisible(true);
        dsd.setAlwaysOnTop(true);
        dsd.setLocation((this.getLocation().x) + this.getWidth() / 2 - dsd.getWidth() / 2, (this.getLocation().y) + this.getHeight() / 2 - dsd.getHeight() / 2);
        while (dsd.isActive()) {
            this.setEnabled(false);
        }
    }//GEN-LAST:event_workItemButtonActionPerformed

    private void expectedDurationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expectedDurationTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expectedDurationTextFieldActionPerformed

    private void periodSelectorComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_periodSelectorComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_periodSelectorComboActionPerformed

    private void newProjectRBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectRBNActionPerformed
        // TODO add your handling code here:
        expectedDurationTextField.setEditable(false);
        periodSelectorCombo.setEnabled(false);
        jLabel5.setText("");
        jobsOrProjectsCombo.setVisible(false);
    }//GEN-LAST:event_newProjectRBNActionPerformed

    private void confirmProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmProjectActionPerformed
        // TODO add your handling code here:
        while (!workItemButton.getText().equals("Select") && (addToProjectRBN.isSelected() | newProjectRBN.isSelected())
                && !jobDescriptionTextArea.getText().equals("")) {
            //Send this bitch to the top of the stack
            Connection conn = PlantEquipment.conn;
            if (newProjectRBN.isSelected()) {

                String equipmentID = SelectEquipment.selection.getEquipmentID();
                String jobDesc = jobDescriptionTextArea.getText();

                if (jobDesc.length() > 140) {
                    JOptionPane.showMessageDialog(this, "Your description isi too long. Make it brief", "Heeeeeeeeeeeeey", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                Project p = new startofagreatfuture.Project(SelectEquipment.selection, jobDesc);
                try {
                    p.commitToDatabase(conn);
                    conn.commit();

                } catch (SQLException e) {
                    JDBCUtil.rollback(conn);
                    e.printStackTrace();
                    break;
                }
                workItemButton.setText("select");
                jobDescriptionTextArea.setText("");
                JOptionPane.showMessageDialog(this, "<html>Created Project. Click create job and add to this project</html>", "Success!", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (addToProjectRBN.isSelected()) {
                Connection connection = JDBCUtil.getConnection();
                int projectNumber;
                Job job;
                String equipmentID = null;
                String selectedProjectString = jobsOrProjectsCombo.getSelectedItem().toString();
                projectNumber = Integer.parseInt(
                        selectedProjectString.substring(
                                selectedProjectString.indexOf("PN") + 2, selectedProjectString.indexOf("</meta")));

                String workItem = workItemButton.getText();
                int time = 0;
                String duration = null;
                try {
                    time = Integer.parseInt(expectedDurationTextField.getText());
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(this, "Enter valid integer value for time",
                            "invalid time period", JOptionPane.ERROR_MESSAGE);
                    e.printStackTrace();
                }
                String periodType = periodSelectorCombo.getSelectedItem().toString();

                duration = time + periodType.substring(0, 1);
                String thisJobDescription = jobDescriptionTextArea.getText();

                equipmentID = SelectEquipment.selection.getEquipmentID();
                String repeats = frequencyComboBox.getActionCommand().substring(0, 1);

                job = new Job(LocalDateTime.now(), null, duration, null, "00001", "u", workItem, equipmentID,
                        projectNumber, thisJobDescription, 0, "", "n");

                try {
                    job.commitToDatabase(connection);
                    connection.commit();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JDBCUtil.rollback(connection);
                    Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
                CardLayout cd;
                cd = (CardLayout) detailsCardsPanel.getLayout();

                workItemButton.setText("");
                jobDescriptionTextArea.setText("");
                isProjectCheckBox.setEnabled(true);
                isProjectCheckBox.setSelected(false);
                addToProjectRBN.setEnabled(true);
                newProjectRBN.setEnabled(true);
                addToProjectRBN.setSelected(false);

                detailsCardsPanel.repaint();
                cd.previous(detailsCardsPanel);
                return;
            }
        }
        JOptionPane.showMessageDialog(this, "Fill all required fields for the job", "Missing Fields!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_confirmProjectActionPerformed

    private void createJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createJobButtonActionPerformed
        // reset job creation panel
        resetNewJobForm();
        resetProjectPanelForm();

        CardLayout cd = (CardLayout) detailsCardsPanel.getLayout();
        cd.show(detailsCardsPanel, "newJobPanel");
    }//GEN-LAST:event_createJobButtonActionPerformed
    boolean clickedProject = false, clickedDash = false;
    java.awt.event.MouseEvent evt;
    public List<Job> jobList = new ArrayList<>();
    private void listOfThingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listOfThingsMouseClicked
        // TODO add your handling code here:
        if (listOfThings.getSelectedValue() instanceof Object && listOfThings.getSelectedValue().equals("<-Back")) {
            listOfThings.setModel(UpdateHomeList.JobListModel);
        }
        
        if (!clickedProject&&!clickedDash) {
            htmlSelected = listOfThings.getSelectedValue();
        }

        if (!(htmlSelected instanceof Object) || htmlSelected.length() < 100) {
            return;
        }
        if (clickedProject && listOfProjectJobs.getSelectedValue().length() > 0) {
            System.out.println("clickedProject && listOfProjectJobs.getSelectedValue().length() > 0");
            htmlSelected = listOfProjectJobs.getSelectedValue();
            finishJobButton.setEnabled(false);
            makeProjectFromJobButton.setEnabled(false);
        }
        CardLayout cd;
        cd = (CardLayout) detailsCardsPanel.getLayout();

        HTMLSelectedHelper help = null;

        help = new HTMLSelectedHelper(htmlSelected);

        JCN = help.getJobCardNumber();
        project = Integer.parseInt(help.getProject());

        if ((project == 0) | (clickedProject)) {

            if (project == 0) {
                finishJobButton.setEnabled(true);
                makeProjectFromJobButton.setEnabled(true);
                clickedProject = false;
            }
            String jobDetails = help.getJobDetails();
            String statusOfJob = help.getStatusOfJob();

            LocalDateTime startTime = null;

            startTime = help.getStartTime();
            if ((startTime instanceof Object) && startTime.isAfter(LocalDateTime.now())) {
                Project.initiationDate = startTime;
            }

            if (statusOfJob.equals("d")) {
                removeArtisanButton.setEnabled(false);
                finishJobButton.setEnabled(false);
                makeProjectFromJobButton.setEnabled(false);
            } else {
                removeArtisanButton.setEnabled(true);
                finishJobButton.setEnabled(true);
                makeProjectFromJobButton.setEnabled(true);
            }
            javax.swing.JPanel guntsgunts = new GanttChart(Arrays.asList(help.getJob()));
            guntsgunts.setSize(JobGantt.getSize());
            guntsgunts.setVisible(true);
            SwingUtilities.invokeLater(() -> {
                JobGantt.removeAll();
                JobGantt.add((guntsgunts));
                JobGantt.repaint();
            });

            DefaultListModelOfArtisans.clear();
            try {
                String query = "SELECT artisan.Name FROM `job` INNER JOIN artisan ON artisan.SRNumber=job.SRNumber WHERE jobCardNumber =?;";
                Connection conn = JDBCUtil.getConnection();
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setInt(1, JCN);
                ResultSet rs = executeQuery(pstmt, conn);
                while (rs.next()) {
                    DefaultListModelOfArtisans.addElement(rs.getString("name"));
                }
                DefaultListModelOfArtisans.addElement("add artisan");
                jobDescription.setText(jobDetails);
            } catch (SQLException e) {
                e.printStackTrace();
            }
            cd.show(detailsCardsPanel, "selectedJobDetailsPanel");
        } else {
            DefaultListModelOfProjectJobs.clear();
            try {
                Connection conn = JDBCUtil.getConnection();

                String query
                        = "SELECT jobCardNumber,job.equipmentID, job.startTime, stopTime, job.SRNumber, job.status,instantiator,"
                        + "job.project,requestTime, expectedDuration, job.description,job.frequency, equipment.name FROM job INNER "
                        + "JOIN equipment ON job.equipmentID = equipment.EquipmentID WHERE expectedDuration>0 AND project =? AND SRNumber = 'await'";
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setInt(1, project);

                ResultSet rs = executeQuery(pstmt, conn);
                conn.commit();
                jobList.clear();
                while (rs.next()) {
                    LocalDateTime startTime = null, requestTime = null, stopTime = null;
                    String instantiator, status, equipmentName, equipmentID, jobDescription, SRNumber, repeats, expectedDuration;
                    int project, jobCardNumber;

                    try {
                        requestTime = rs.getTimestamp("requestTime").toLocalDateTime();
                    } catch (NullPointerException e) {
                    }
                    try {
                        startTime = rs.getTimestamp("startTime").toLocalDateTime();
                    } catch (NullPointerException e) {
                    }
                    expectedDuration = rs.getString("expectedDuration");
                    try {
                        stopTime = rs.getTimestamp("stopTime").toLocalDateTime();
                    } catch (NullPointerException e) {
                    }

                    instantiator = rs.getString("instantiator");
                    status = rs.getString("status");
                    equipmentName = rs.getString("name");
                    equipmentID = rs.getString("equipmentID");
                    project = rs.getInt("project");
                    jobDescription = rs.getString("description");
                    jobCardNumber = rs.getInt("jobCardNumber");
                    SRNumber = rs.getString("SRNumber");
                    repeats = rs.getString("frequency");

                    Job x = new Job(requestTime, startTime, expectedDuration, stopTime, instantiator, status, equipmentName, equipmentID,
                            project, jobDescription, jobCardNumber, null, repeats);
                    jobList.add(x);
                    DefaultListModelOfProjectJobs.addElement(x.toString());
                }

                if (!jobList.isEmpty()) {
                    GanttChart gunts = new GanttChart(jobList);
                    gunts.setSize(projectGantt.getSize());
                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            projectGantt.removeAll();
                            projectGantt.add(gunts);
                            projectGantt.repaint();
                        }
                    });
                } else {

                    projectGantt.removeAll();
                    JLabel jl = new JLabel("Add jobs to this project");
                    jl.setSize(300, 200);
                    projectGantt.add(jl);
                    projectGantt.repaint();

                }
                DefaultListModelOfProjectJobs.addElement("");
                cd.show(detailsCardsPanel, "selectedProject");
            } catch (Exception e) {
                e.printStackTrace();
            }
            //drawDetails();
        }

    }//GEN-LAST:event_listOfThingsMouseClicked
    private void isProjectCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isProjectCheckBoxActionPerformed
        // TODO add your handling code here:
        resetProjectPanelForm();
        if (isProjectCheckBox.isSelected()) {
            projectPanel.setVisible(true);
            submitJobButton.setEnabled(false);
            repeatsCheckBox.setEnabled(false);
            repeatsCheckBox.setSelected(false);
            frequencyComboBox.setVisible(false);

        } else {
            periodSelectorCombo.setEnabled(true);
            submitJobButton.setEnabled(true);
            projectPanel.setVisible(false);
            repeatsCheckBox.setEnabled(true);
            expectedDurationTextField.setEditable(true);
            frequencyComboBox.setVisible(true);
        }
    }//GEN-LAST:event_isProjectCheckBoxActionPerformed

    private void submitJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJobButtonActionPerformed
        // TODO add your handling code here:
        {
            //test invariants first
            if ((expectedDurationTextField.getText().equals(""))
                    || (jobDescriptionTextArea.getText().equals(""))
                    || (workItemButton.getText().equals("Select Equipment"))) {
                JOptionPane.showMessageDialog(null, "Please fill all required details!");
            } else {
                String duration = "" + periodSelectorCombo.getSelectedItem().toString().charAt(0);

                String expectedDuration;
                try {
                    expectedDuration = Integer.parseInt(expectedDurationTextField.getText()) + duration;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Use integers for expected duration", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                PlantEquipment equipment = SelectEquipment.selection;
                Connection conn = new PlantEquipment().getConnection();
                String jobDescription = jobDescriptionTextArea.getText();

                if (jobDescription.length() > 140) {
                    JOptionPane.showMessageDialog(this, "Your description isi too long. Make it brief", "Heeeeeeeeeeeeey", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                String freq = null;
                if (repeatsCheckBox.isSelected()) {
                    freq = frequencyComboBox.getActionCommand().substring(0, 1);
                } else {
                    freq = "n";
                }

                Job jz = new Job(expectedDuration, equipment, jobDescription, freq);
                try {
                    decommission(equipment.getEquipmentID(), conn);
                    jz.commitToDatabase(conn);
                    conn.commit();
                    JOptionPane.showMessageDialog(rootPane, "Job's submitted");
                } catch (SQLException e) {
                    JDBCUtil.rollback(conn);
                    e.printStackTrace();
                }
            }
            CardLayout cd = (CardLayout) detailsCardsPanel.getLayout();
            cd.show(detailsCardsPanel, "blancPanel");
        }
    }//GEN-LAST:event_submitJobButtonActionPerformed

    private void addToProjectRBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToProjectRBNActionPerformed
        // TODO add your handling code here:
        expectedDurationTextField.setEditable(true);
        Connection conn = new PlantEquipment().getConnection();
        periodSelectorCombo.setEnabled(true);
        jobsOrProjectsCombo.setVisible(true);
        jLabel5.setVisible(true);
        jLabel5.setText("Select project to add this job");
        String query = "SELECT equipment.Name,job.equipmentID, job.status, job.description, job.project from job INNER JOIN equipment ON job.equipmentID = equipment.EquipmentID where project >0 AND SRNumber = 'await' ";
        //modify above query to exclude jobs from projects

        try {
            PreparedStatement stmt = conn.prepareStatement(query);
            ResultSet rs = executeQuery(stmt, conn);
            jobsOrProjectsCombo.removeAllItems();
            while (rs.next()) {
                int project = rs.getInt("project");
                String workItem = rs.getString("Name");
                String jobDescription = rs.getString("description");

                PlantEquipment pe = new PlantEquipment(rs.getString("equipmentID"), workItem, rs.getString("status"));

                Project proj = new Project(rs.getString("status"), pe, project, jobDescription);

                jobsOrProjectsCombo.addItem(proj.toString());
                conn.commit();
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addToProjectRBNActionPerformed

    private void finishJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishJobButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_finishJobButtonActionPerformed

    private void finishJobButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finishJobButtonMouseClicked
        // TODO add your handling code here:
        try {
            Job.completeJob(JCN);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_finishJobButtonMouseClicked

    private void removeArtisanButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeArtisanButtonMouseClicked
        // TODO add your handling code here:

        try {
            new Job().removeWorkers(jListOfArtisan.getSelectedValuesList(), JCN);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_removeArtisanButtonMouseClicked

    private void jListOfArtisanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListOfArtisanMouseClicked
        // TODO add your handling code here:
        if (jListOfArtisan.getSelectedValue().equals("add artisan")) {
            try {
                SelectArtisan sa = new SelectArtisan(JCN);
                sa.setLocation((this.getLocation().x) + this.getWidth() / 2 - sa.getWidth() / 2, (this.getLocation().y) + this.getHeight() / 2 - sa.getHeight() / 2);
                sa.setVisible(true);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jListOfArtisanMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void removeArtisanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeArtisanButtonActionPerformed
        // TODO add your handling code here:
        new Job().removeWorkers(jListOfArtisan.getSelectedValuesList(), JCN);
    }//GEN-LAST:event_removeArtisanButtonActionPerformed

    private void addJobToProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJobToProjectButtonActionPerformed

        HTMLSelectedHelper help = new HTMLSelectedHelper(listOfThings.getSelectedValue());

        PlantEquipment pe = new PlantEquipment(help.getEquipmentID(), help.getServiceItemName(), "u");
        Project proj = new Project("u", pe, Integer.parseInt(help.getProject()), help.getJobDetails());

        CardLayout cd;
        cd = (CardLayout) detailsCardsPanel.getLayout();

        resetNewJobForm();
        resetProjectPanelForm();

        jLabel5.setText("Adding job to project:");
        jLabel5.setVisible(true);

        jobsOrProjectsCombo.removeAll();
        jobsOrProjectsCombo.addItem(proj.toString());
        jobsOrProjectsCombo.setVisible(true);
        workItemButton.setText(help.getServiceItemName());
        projectPanel.setVisible(true);
        submitJobButton.setEnabled(false);
        isProjectCheckBox.setSelected(true);
        isProjectCheckBox.setEnabled(false);
        repeatsCheckBox.setSelected(false);
        repeatsCheckBox.setEnabled(false);
        addToProjectRBN.setSelected(true);
        addToProjectRBN.setEnabled(false);
        newProjectRBN.setEnabled(false);
        newProjectRBN.setSelected(false);
        SelectEquipment.selection = pe;
        cd.show(detailsCardsPanel, "newJobPanel");
    }//GEN-LAST:event_addJobToProjectButtonActionPerformed

    private void listOfProjectJobsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listOfProjectJobsMouseClicked
        // TODO add your handling code here:
        clickedProject = true;
        htmlSelected = listOfProjectJobs.getSelectedValue();

        if (!(htmlSelected instanceof Object) || htmlSelected.length() == 0) {
            return;
        }

        System.out.println("error html seelction" + htmlSelected + " Size " + htmlSelected.length());

        listOfThingsMouseClicked(evt);
        clickedProject = false;
    }//GEN-LAST:event_listOfProjectJobsMouseClicked

    private void HRPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HRPanelMouseClicked
        CardLayout cd;
        cd = (CardLayout) detailedStats.getLayout();
        cd.show(detailedStats, "angelicaPanel");
    }//GEN-LAST:event_HRPanelMouseClicked

    private void makeProjectFromJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeProjectFromJobButtonActionPerformed
        // TODO add your handling code here:
        HTMLSelectedHelper help = new HTMLSelectedHelper(htmlSelected);
        Job job = help.getJob();
        Connection conn = JDBCUtil.getConnection();
        try {
            job.changeToProject(conn);
        } catch (SQLException ex) {
            JDBCUtil.rollback(conn);
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_makeProjectFromJobButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    Vector<Vector<String>> maint = new Vector<>();
    HashMap genDeeds = new HashMap<>();
    Vector<Vector> allElse = new Vector<>();
    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
        PlantEquipment pe = (PlantEquipment) node.getUserObject();

        Map<String, Object> maintenanceDetails = formHelperClasses.SelectedPlantRegister
                .getMaintenanceDetails(pe.getEquipmentID());
        Arrays.asList("MTBF", "MTTR", "Last Repair", "Artisan")
                .stream()
                .forEach(a -> {
                    Vector v = new Vector<String>();
                    v.add(a);
                    v.add(maintenanceDetails.get(a));
                    maint.add(v);
                });

        genDeeds.put("Manufacturer", maintenanceDetails.get("Manufacturer"));
        maintenanceDetails.remove("Manufacturer");
        genDeeds.put("Model Number", maintenanceDetails.get("Model Number"));
        maintenanceDetails.remove("Model Number");
        genDeeds.put("Serial Number", maintenanceDetails.get("Serial Number"));
        maintenanceDetails.remove("Serial Number");
        genDeeds.put("Purchase Year", maintenanceDetails.get("Purchase Year"));
        maintenanceDetails.remove("Purchase Year");

        maintenanceDetails.forEach((a, b) -> {
            Vector vv = new Vector<>();
            vv.add(a);
            vv.add(b);
            allElse.add(vv);
        });

        myzuzu.clear();

    }//GEN-LAST:event_jTree1ValueChanged

    private void equipmentPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_equipmentPanelMouseClicked
        // TODO add your handling code here:
        CardLayout cd;
        cd = (CardLayout) detailedStats.getLayout();
        cd.show(detailedStats, "equipmentSelectedPanel");
    }//GEN-LAST:event_equipmentPanelMouseClicked

    private void plantRegisterPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plantRegisterPanelMouseClicked
        CardLayout cd;
        cd = (CardLayout) detailedStats.getLayout();
        cd.show(detailedStats, "selectedPlantRegisterPanel");
    }//GEN-LAST:event_plantRegisterPanelMouseClicked

    private void utilitiesUsagePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_utilitiesUsagePanelMouseClicked
        // TODO add your handling code here:
        CardLayout cd;
        cd = (CardLayout) detailedStats.getLayout();

        if (!waterMeterReadings.isEmpty()) {
            cd.show(detailedStats, "usp");
            return;
        }

        //Should fetch data from the database here
        Connection conn = JDBCUtil.getConnection("meter");

        LocalDateTime reportDay = LocalDateTime.of(LocalDate.now(), LocalTime.MIN)
                .minusDays(LocalDateTime.now().getDayOfWeek().ordinal());//First Monday of week
        LocalDateTime priorReportDate = reportDay.minusDays(7L);
        LocalDateTime beforePriorReportDate = priorReportDate.minusDays(7L);

        String query = "SELECT * FROM water WHERE date =? or date =? or date =?";
        try {
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setTimestamp(1, Timestamp.valueOf(reportDay));
            pstmt.setTimestamp(2, Timestamp.valueOf(priorReportDate));
            pstmt.setTimestamp(3, Timestamp.valueOf(beforePriorReportDate));
            ResultSet rs = pstmt.executeQuery();

            rs.next();
            int rsmdCount = rs.getMetaData().getColumnCount();
            for (int col = 2; col <= rsmdCount; col++) {
                List<Integer> myl = new ArrayList<>();
                myl.add(rs.getInt(col));
                waterMeterReadings.add(myl);
            }
            while (rs.next()) {
                for (int col = 2; col <= rsmdCount; col++) {
                    waterMeterReadings.get(col - 2).add(rs.getInt(col));
                }
            }

            for (List<Integer> myl : waterMeterReadings) {
                myl.add(myl.get(1) - myl.get(0));
                myl.add(myl.get(2) - myl.get(1));
            }

            int thisWeekUsage = waterMeterReadings.stream().map(a -> a.get(2)).reduce(0, (a, b) -> {
                return a + b;
            });
            int lastWeekUsage = waterMeterReadings.stream().map(a -> a.get(3)).reduce(0, (a, b) -> {
                return a + b;
            });
            jLabel43.setText(thisWeekUsage + "");
            jLabel44.setText(lastWeekUsage + "");
            jLabel46.setText(((double) (100 * (double) (thisWeekUsage - lastWeekUsage) / (double) (lastWeekUsage)) + "").substring(0, 6) + "%");
            StringBuilder councilMeterVals = new StringBuilder(//<editor-fold defaultstate="collapsed" desc="html for concil meters">
                    "<html>\n"
                    + "<table class=MsoTableGrid border=0 cellspacing=1 cellpadding=6 align=center\n"
                    + " style='border-collapse:collapse;border:none'>\n"
                    + "<tr align=center>\n"
                    + "<td></td>\n"
                    + "<td>this week</td>\n"
                    + "<td>Last Week</td>\n"
                    + "<td>% Variance</td>\n"
                    + "</tr>\n"
                    + "<tr align=center>\n"
                    + "<td>Reception</td>\n"
                    + "<td>twbhH2O</td>\n"
                    + "<td>lwbhH2O</td>\n"
                    + "<td>bhvar</td>\n"
                    + "</tr>\n"
                    + "<tr align=center>\n"
                    + "<td>Mains Malting</td>\n"
                    + "<td>twmH2O</td>\n"
                    + "<td>lwmH2O</td>\n"
                    + "<td>mvar</td>\n"
                    + "</tr>\n"
                    + "<tr align=center>\n"
                    + "<td>Effluent</td>\n"
                    + "<td>twctH2O</td>\n"
                    + "<td>lwctH2O</td>\n"
                    + "<td>ctvar</td>\n"
                    + "</tr>\n"
                    + "<tr align=center>\n"
                    + "<td>Pump House</td>\n"
                    + "<td>twpH2O</td>\n"
                    + "<td>lwpH2O</td>\n"
                    + "<td>pvar</td>\n"
                    + "</tr>\n"
                    + "<tr align=center>\n"
                    + "<td>Far Corner</td>\n"
                    + "<td>twbH2O</td>\n"
                    + "<td>lwbH2O</td>\n"
                    + "<td>bvar</td>\n"
                    + "</tr>\n"
                    + "<tr align=center>\n"
                    + "<td>total</td>\n"
                    + "<td>twtot</td>\n"
                    + "<td>lwtot</td>\n"
                    + "<td>totvar</td>\n"
                    + "</tr>\n"
                    + "\n"
                    + "</table>\n"
                    + "</html>"
            //</editor-fold>
            );
            double twtot = 0, lwtot = 0;
            int x = councilMeterVals.indexOf("twbhH2O");
            double twVal = waterMeterReadings.get(0).get(4) / 1000;
            councilMeterVals.replace(x, x + 7, twVal + "");
            x = councilMeterVals.indexOf("lwbhH2O");
            double lwVal = waterMeterReadings.get(0).get(3) / 1000;
            councilMeterVals.replace(x, x + 7, lwVal + "");
            x = councilMeterVals.indexOf("bhvar");
            councilMeterVals.replace(x, x + 5, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");
            twtot += twVal;
            lwtot += lwVal;

            x = councilMeterVals.indexOf("twmH2O");
            twVal = waterMeterReadings.get(1).get(4);
            councilMeterVals.replace(x, x + 6, twVal + "");
            x = councilMeterVals.indexOf("lwmH2O");
            lwVal = waterMeterReadings.get(1).get(3);
            councilMeterVals.replace(x, x + 6, lwVal + "");
            x = councilMeterVals.indexOf("mvar");
            councilMeterVals.replace(x, x + 4, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");
            twtot += twVal;
            lwtot += lwVal;

            x = councilMeterVals.indexOf("twctH2O");
            twVal = waterMeterReadings.get(2).get(4) / 1000;
            councilMeterVals.replace(x, x + 7, twVal + "");
            x = councilMeterVals.indexOf("lwctH2O");
            lwVal = waterMeterReadings.get(2).get(3) / 1000;
            councilMeterVals.replace(x, x + 7, lwVal + "");
            x = councilMeterVals.indexOf("ctvar");
            councilMeterVals.replace(x, x + 5, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");
            twtot += twVal;
            lwtot += lwVal;

            x = councilMeterVals.indexOf("twpH2O");
            twVal = waterMeterReadings.get(3).get(4);
            councilMeterVals.replace(x, x + 6, twVal + "");
            x = councilMeterVals.indexOf("lwpH2O");
            lwVal = waterMeterReadings.get(3).get(3);
            councilMeterVals.replace(x, x + 6, lwVal + "");
            x = councilMeterVals.indexOf("pvar");
            councilMeterVals.replace(x, x + 4, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");
            twtot += twVal;
            lwtot += lwVal;

            x = councilMeterVals.indexOf("twbH2O");
            twVal = waterMeterReadings.get(4).get(4) / 1000;
            councilMeterVals.replace(x, x + 6, twVal + "");
            x = councilMeterVals.indexOf("lwbH2O");
            lwVal = waterMeterReadings.get(4).get(3) / 1000;
            councilMeterVals.replace(x, x + 6, lwVal + "");
            x = councilMeterVals.indexOf("bvar");
            String b = 100 * (double) (twVal - lwVal) / (double) (twVal) + "";
            councilMeterVals.replace(x, x + 4, b.length() > 6 ? b.substring(0, 6) + "%" : b + "%");
            twtot += twVal;
            lwtot += lwVal;

            x = councilMeterVals.indexOf("twtot");
            councilMeterVals.replace(x, x + 5, twtot + "");
            x = councilMeterVals.indexOf("lwtot");
            councilMeterVals.replace(x, x + 5, lwtot + "");
            x = councilMeterVals.indexOf("totvar");

            jLabel43.setText(twtot + "");
            jLabel44.setText(lwtot + "");
            double totVar = 100 * (double) (twtot - lwtot) / (double) (lwtot);
            b = totVar + "";
            jLabel46.setText(b.length() > 6 ? b.substring(0, 6) + "%" : b + "%");
            councilMeterVals.replace(x, x + 6, b.length() > 6 ? b.substring(0, 6) + "%" : b + "%");

            jLabel41.setText(councilMeterVals.toString());

            StringBuilder internalMetersSB = new StringBuilder(//<editor-fold defaultstate="collapsed" desc="Internal Meter HTML">
                    "<HTML>\n"
                    + "<table class=MsoTableGrid border=0 cellspacing=1 cellpadding=6\n"
                    + " style='border-collapse:collapse;border:none'>\n"
                    + "<tr>\n"
                    + "<td></td>\n"
                    + "<td>this week</td>\n"
                    + "<td>Last Week</td>\n"
                    + "<td>% Variance</td>\n"
                    + "</tr>\n"
                    + "<tr>\n"
                    + "<td>BrewHouse</td>\n"
                    + "<td>tb</td>\n"
                    + "<td>lb</td>\n"
                    + "<td>bv</td>\n"
                    + "</tr>\n"
                    + "<tr>\n"
                    + "<td>Malting</td>\n"
                    + "<td>tm</td>\n"
                    + "<td>lm</td>\n"
                    + "<td>mv</td>\n"
                    + "</tr>\n"
                    + "<tr>\n"
                    + "<td>Cooling Towers</td>\n"
                    + "<td>tc</td>\n"
                    + "<td>lc</td>\n"
                    + "<td>cv</td>\n"
                    + "</tr>\n"
                    + "<tr>\n"
                    + "<td>Packaging</td>\n"
                    + "<td>tp</td>\n"
                    + "<td>lpq</td>\n"
                    + "<td>pv</td>\n"
                    + "</tr>\n"
                    + "<tr>\n"
                    + "<td>Boiler 3</td>\n"
                    + "<td>tt</td>\n"
                    + "<td>ltm</td>\n"
                    + "<td>tv</td>\n"
                    + "</tr>\n"
                    + "<tr>\n"
                    + "<td>Boiler 5 & 6</td>\n"
                    + "<td>tf</td>\n"
                    + "<td>lf</td>\n"
                    + "<td>fv</td>\n"
                    + "</tr>\n"
                    + "\n"
                    + "</table>\n"
                    + "</HTML>"
            //</editor-fold>
            );
            x = internalMetersSB.indexOf("tb");
            twVal = waterMeterReadings.get(5).get(4);
            internalMetersSB.replace(x, x + 2, twVal + "");
            x = internalMetersSB.indexOf("lb");
            lwVal = waterMeterReadings.get(5).get(3);
            internalMetersSB.replace(x, x + 2, lwVal + "");
            x = internalMetersSB.indexOf("bv");
            internalMetersSB.replace(x, x + 2, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");

            x = internalMetersSB.indexOf("tm");
            twVal = waterMeterReadings.get(6).get(4) * 10;
            internalMetersSB.replace(x, x + 2, twVal + "");
            x = internalMetersSB.indexOf("lm");
            lwVal = waterMeterReadings.get(6).get(3) * 10;
            internalMetersSB.replace(x, x + 2, lwVal + "");
            x = internalMetersSB.indexOf("mv");
            internalMetersSB.replace(x, x + 2, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");

            x = internalMetersSB.indexOf("tc");
            twVal = waterMeterReadings.get(7).get(4);
            internalMetersSB.replace(x, x + 2, twVal + "");
            x = internalMetersSB.indexOf("lc");
            lwVal = waterMeterReadings.get(7).get(3);
            internalMetersSB.replace(x, x + 2, lwVal + "");
            x = internalMetersSB.indexOf("cv");
            internalMetersSB.replace(x, x + 2, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");

            x = internalMetersSB.indexOf("tp");
            twVal = waterMeterReadings.get(8).get(4);
            internalMetersSB.replace(x, x + 2, twVal + "");
            x = internalMetersSB.indexOf("lpq");
            lwVal = waterMeterReadings.get(8).get(3);
            internalMetersSB.replace(x, x + 3, lwVal + "");
            x = internalMetersSB.indexOf("pv");
            internalMetersSB.replace(x, x + 2, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");

            x = internalMetersSB.indexOf("tt");
            twVal = waterMeterReadings.get(9).get(4);
            internalMetersSB.replace(x, x + 2, twVal + "");
            x = internalMetersSB.indexOf("ltm");
            lwVal = waterMeterReadings.get(9).get(3);
            internalMetersSB.replace(x, x + 3, lwVal + "");
            x = internalMetersSB.indexOf("tv");
            internalMetersSB.replace(x, x + 2, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");

            x = internalMetersSB.indexOf("tf");
            twVal = waterMeterReadings.get(10).get(4);
            internalMetersSB.replace(x, x + 2, twVal + "");
            x = internalMetersSB.indexOf("lf");
            lwVal = waterMeterReadings.get(10).get(3);
            internalMetersSB.replace(x, x + 2, lwVal + "");
            x = internalMetersSB.indexOf("fv");
            internalMetersSB.replace(x, x + 2, (100 * (double) (twVal - lwVal) / (double) (twVal) + "").substring(0, 6) + "%");

            jLabel50.setText(internalMetersSB.toString());

            System.out.println(waterMeterReadings.toString());

        } catch (SQLException e) {
            e.printStackTrace();
            try {
                conn.rollback();
            } catch (SQLException ex) {
                Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
                throw new RuntimeException("hey!!!!!!!!!!!!!!!!!!" + ex + "try of tries Wont work");
            }
        }

        cd.show(detailedStats, "usp");
    }//GEN-LAST:event_utilitiesUsagePanelMouseClicked

    private void TabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TabbedPaneStateChanged
        // TODO add your handling code here:
        String d = TabbedPane.getTitleAt(TabbedPane.getSelectedIndex());
        CardLayout cs = (CardLayout) toolsPanel.getLayout();
        switch (d) {
            case "Home":
                cs.show(toolsPanel, "ribbonHome");
                break;
            case "Notifications":
                cs.show(toolsPanel, "ribbonMessages");
                break;
            case "Work Orders":
                cs.show(toolsPanel, "ribbonJobs");
                break;
            case "Stats":
                cs.show(toolsPanel, "ribbonStats");
                break;
            case "Settings":
                cs.show(toolsPanel, "ribbonSettings");
                break;
        }
    }//GEN-LAST:event_TabbedPaneStateChanged

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        // TODO add your handling code here:
        CardLayout cd;
        cd = (CardLayout) detailedStats.getLayout();
        cd.show(detailedStats, "benchMarksPanel");
    }//GEN-LAST:event_jPanel9MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    int previousComboSelection;
    private void jComboBox5PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox5PropertyChange
        // TODO add your handling code here:
        int selection = jComboBox5.getSelectedIndex();
        if (selection == previousComboSelection) {
            return;
        }
        StringBuilder sb = new StringBuilder("Number of  to project initialisation");
        int xer = 0;
        switch (selection) {
            case 0:
                break;

            case 2:
                sb.insert(10, "days");
                try {
                    int x = Integer.parseInt(
                            JOptionPane.showInputDialog(
                                    this, sb.toString(),
                                    "Project Commencement time",
                                    JOptionPane.QUESTION_MESSAGE));
                    SwingUtilities.invokeLater(
                            () -> {
                                try {
                                    new Project(jobList).initialiseJobs(LocalDateTime.now().plusDays(x));
                                    JOptionPane.showMessageDialog(this, "Project Will be initiated in " + x + " days", "Success", JOptionPane.INFORMATION_MESSAGE);
                                } catch (RuntimeException e) {
                                    JOptionPane.showMessageDialog(this, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            });

                } catch (RuntimeException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                }
                System.out.print("x man " + xer);
                break;

            case 1:
                try {
                    SwingUtilities.invokeLater(
                            () -> {
                                try {
                                    new Project(jobList).initialiseJobs(LocalDateTime.now());
                                    JOptionPane.showMessageDialog(this, "Project initiated. Start First job", "Initialised ", JOptionPane.INFORMATION_MESSAGE);
                                } catch (RuntimeException e) {
                                    JOptionPane.showMessageDialog(this, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            });

                } catch (RuntimeException e) {
                    e.printStackTrace();
                }
                break;
            case 3:
                sb.insert(10, "months");
                try {
                    int x = Integer.parseInt(
                            JOptionPane.showInputDialog(
                                    this, sb.toString(),
                                    "Project Commencement time",
                                    JOptionPane.QUESTION_MESSAGE));
                    SwingUtilities.invokeLater(
                            () -> {
                                try {
                                    new Project(jobList).initialiseJobs(LocalDateTime.now().plusMonths(x));
                                    JOptionPane.showMessageDialog(this, "Project Will be initiated in " + x + " Months", "Success", JOptionPane.INFORMATION_MESSAGE);
                                } catch (RuntimeException e) {
                                    JOptionPane.showMessageDialog(this, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            });

                } catch (RuntimeException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                }
                System.out.print("x man " + xer);
                break;
        }
        previousComboSelection = selection;
    }//GEN-LAST:event_jComboBox5PropertyChange

    private void jobBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobBackButtonActionPerformed
        // TODO add your handling code here:
        CardLayout cd = (CardLayout) detailsCardsPanel.getLayout();

        if (project > 0) {
            htmlSelected = listOfThings.getSelectedValue();
            listOfThingsMouseClicked(this.evt);
            cd.show(detailsCardsPanel, "selectedProject");
        } else {
            cd.show(detailsCardsPanel, "mmsp");
        }

    }//GEN-LAST:event_jobBackButtonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        CardLayout cd = (CardLayout) detailsCardsPanel.getLayout();
        cd.show(detailsCardsPanel, "mmsp");

    }//GEN-LAST:event_jButton5ActionPerformed

    private void repeatsCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_repeatsCheckBoxStateChanged
        // TODO add your handling code here:
        if (repeatsCheckBox.isSelected()) {
            frequencyComboBox.setVisible(true);
        } else {
            frequencyComboBox.setVisible(false);
        }
    }//GEN-LAST:event_repeatsCheckBoxStateChanged

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        JobTypeSelection jobTypeSelection = new JobTypeSelection();
        jobTypeSelection.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        CardLayout cd;
        cd = (CardLayout) detailsCardsPanel.getLayout();

        cd.previous(detailsCardsPanel);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        jButton12ActionPerformed(evt);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
        DefaultListModel dlm = new DefaultListModel<>();
        Object[] myString = new Object[UpdateHomeList.JobListModel.size()];

        dlm.addElement("<-Back");
        String searchElement = jTextField3.getText();
        UpdateHomeList.JobListModel.copyInto(myString);

        java.util.Arrays.asList(myString).stream().filter(a -> a.toString().contains(searchElement)).forEach(a -> dlm.addElement(a));

        listOfThings.setModel(dlm);
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void resetNewJobForm() {
        workItemButton.setText("Select");
        expectedDurationTextField.setText("");
        expectedDurationTextField.setEnabled(true);
        periodSelectorCombo.setEnabled(true);
        jobDescriptionTextArea.setText("");
        isProjectCheckBox.setEnabled(true);
        isProjectCheckBox.setSelected(false);
        repeatsCheckBox.setEnabled(true);
        repeatsCheckBox.setSelected(false);
        frequencyComboBox.setVisible(false);
    }

    private void resetProjectPanelForm() {
        System.out.println("Resetting projectPanel");
        addToProjectRBN.setSelected(false);
        newProjectRBN.setSelected(false);
        jobsOrProjectsCombo.removeAll();
        projectPanel.setVisible(false);
    }
    private void jList5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList5MouseClicked
        // TODO add your handling code here:
        clickedDash = true;
        htmlSelected = jList5.getSelectedValue();
        listOfThingsMouseClicked(evt);
        clickedDash= false;
    }//GEN-LAST:event_jList5MouseClicked

    private void newJobPanelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newJobPanelFocusLost
        // TODO add your handling code here:
        resetNewJobForm();
    }//GEN-LAST:event_newJobPanelFocusLost

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        clickedDash = true;
        htmlSelected = jList1.getSelectedValue();
        listOfThingsMouseClicked(evt);
        clickedDash= false;
    }//GEN-LAST:event_jList1MouseClicked

    private void jList4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList4MouseClicked
        // TODO add your handling code here:
        clickedDash = true;
        htmlSelected = jList4.getSelectedValue();
        listOfThingsMouseClicked(evt);
        clickedDash= false;
    }//GEN-LAST:event_jList4MouseClicked

    private void jList6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList6MouseClicked
        // TODO add your handling code here:
        clickedDash = true;
        htmlSelected = jList6.getSelectedValue();
        listOfThingsMouseClicked(evt);
        clickedDash= false;
    }//GEN-LAST:event_jList6MouseClicked

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        String query = "DELETE FROM job WHERE jobCardNumber =?"  ;
        Connection conn =JDBCUtil.getConnection();
        try{
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setInt(1,JCN);
            String unomas = "SELECT job.description FROM job WHERE jobCardNumber="+JCN;
            ResultSet rs = conn.prepareStatement(unomas).executeQuery();
            rs.next();
            
            JOptionPane.showMessageDialog(this,"Delete"+rs.getString("description"), "Are you fucking sure",JOptionPane.QUESTION_MESSAGE);
            pstmt.executeUpdate();
            conn.commit();
        }catch(SQLException e){
            JDBCUtil.rollback(conn);
            System.out.println("Fuck you, I won't do what you tell me");
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HRPanel;
    public static javax.swing.JPanel JobGantt;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JButton addJobToProjectButton;
    private javax.swing.JRadioButton addToProjectRBN;
    private javax.swing.JPanel angelicaPanel;
    private javax.swing.JPanel benchMarksPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel chatsPanel;
    private javax.swing.JScrollPane componentsPanel;
    private javax.swing.JButton confirmProject;
    private javax.swing.JButton createJobButton;
    private javax.swing.JPanel createJobPanel;
    private javax.swing.JPanel criticalEquipmentSelectedPanel;
    private javax.swing.JPanel detailedElectricityUsagePanel;
    private javax.swing.JPanel detailedStats;
    private javax.swing.JPanel detailedWaterUsagePanel;
    private javax.swing.JPanel detailsCardsPanel;
    private javax.swing.JPanel electricityUsageSummaryPanel;
    private javax.swing.JPanel equipmentPanel;
    private javax.swing.JTable equipmentRepairsTable;
    public static javax.swing.JTextField expectedDurationTextField;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton finishJobButton;
    private javax.swing.JComboBox<String> frequencyComboBox;
    private javax.swing.JScrollPane generalDetailsPanel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JCheckBox isProjectCheckBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JTextArea jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JList<String> jList6;
    private javax.swing.JList<String> jList8;
    private javax.swing.JList<String> jListOfArtisan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    public static javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTree jTree1;
    private javax.swing.JTree jTree2;
    private javax.swing.JButton jobBackButton;
    private javax.swing.JTabbedPane jobCategories;
    private javax.swing.JTextArea jobDescription;
    public static javax.swing.JTextArea jobDescriptionTextArea;
    private javax.swing.JPanel jobDetailsPanel;
    private javax.swing.JComboBox<String> jobsOrProjectsCombo;
    private javax.swing.JPanel jobsPanel;
    private javax.swing.JList<String> listOfProjectJobs;
    public static javax.swing.JList<String> listOfThings;
    static javax.swing.JPanel maintDashBoard;
    private javax.swing.JPanel maintainanceManagementSelectedPanel;
    private javax.swing.JScrollPane maintenancePanel;
    private javax.swing.JButton makeProjectFromJobButton;
    private javax.swing.JPanel messagesPanel;
    private javax.swing.JPanel newJobPanel;
    private javax.swing.JRadioButton newProjectRBN;
    private javax.swing.JComboBox<String> periodSelectorCombo;
    private javax.swing.JPanel plantRegisterPanel;
    static javax.swing.JPanel projectGantt;
    private javax.swing.JPanel projectPanel;
    private javax.swing.JButton removeArtisanButton;
    private javax.swing.JButton removeJobFromProjectButton;
    private javax.swing.JCheckBox repeatsCheckBox;
    private javax.swing.JPanel ribbonHome;
    private javax.swing.JPanel ribbonJobs;
    private javax.swing.JPanel ribbonMessages;
    private javax.swing.JPanel ribbonSettings;
    private javax.swing.JPanel ribbonStats;
    private javax.swing.JPanel selectedJobDeatailsPanel;
    private javax.swing.JPanel selectedPlantRegisterPanel;
    private javax.swing.JPanel selectedProject;
    private javax.swing.JTable specificationsPanel;
    private javax.swing.JPanel statsPanel;
    private javax.swing.JButton submitJobButton;
    private javax.swing.JPanel toolsPanel;
    private javax.swing.JPanel utilitiesSelectedPanel;
    private javax.swing.JPanel utilitiesUsagePanel;
    private javax.swing.JPanel waterUsageSummaryPanel;
    public static javax.swing.JButton workItemButton;
    // End of variables declaration//GEN-END:variables

}
